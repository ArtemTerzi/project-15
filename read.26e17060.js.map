{"mappings":"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","sources":["src/js/read.js","src/js/inputFilterFunc.js"],"sourcesContent":["import { getMarkupError } from './error';\nimport { isFavoriteForStyle, isReadForStyle } from './favoriteReadStyles';\nimport { getMarkup } from './fetches/getMarkup';\nimport { refs } from './refs';\nimport { onSearchFilter } from './inputFilterFunc';\nimport onLike from './onLike';\nimport { onSearchMarkup } from './fetchByInputAndDate';\n\nconst container = document.querySelector('main');\nconst listReadNews = document.querySelector('.readPage-list');\n\nmakeArrNewsForPageRead();\n\nlistReadNews.addEventListener('click', onBtnReadMore);\nlistReadNews.addEventListener('click', onLike);\n\nfunction onBtnReadMore(e) {\n  if (e.target.nodeName !== 'A') {\n    return;\n  }\n\n  const newsCard = e.target.parentNode.parentNode;\n  const newsObj = makeObjectNews(newsCard);\n\n  try {\n    const newsAllLocalStorage = JSON.parse(\n      localStorage.getItem(refs.KEY_LOCAL_STORAGE)\n    );\n\n    if (newsAllLocalStorage === null) {\n      localStorage.setItem(refs.KEY_LOCAL_STORAGE, JSON.stringify([newsObj]));\n      return;\n    }\n\n    if (newsAllLocalStorage !== null) {\n      if (newsAllLocalStorage.every(news => news.link !== newsObj.link)) {\n        newsAllLocalStorage.push(newsObj);\n        localStorage.setItem(\n          refs.KEY_LOCAL_STORAGE,\n          JSON.stringify(newsAllLocalStorage)\n        );\n      }\n\n      const newNewsAllLocalStorage = newsAllLocalStorage.reduce(\n        (newArr, news) => {\n          if (news.link === newsObj.link) {\n            news.dateOfRead = createNewData();\n            news.isRead = true;\n          }\n          newArr.push(news);\n          return newArr;\n        },\n        []\n      );\n      localStorage.setItem(\n        refs.KEY_LOCAL_STORAGE,\n        JSON.stringify(newNewsAllLocalStorage)\n      );\n    }\n  } catch (error) {\n    console.error(error);\n    container.innerHTML = getMarkupError();\n  }\n\n  if (!newsCard.classList.contains('isRead')) {\n    newsCard.classList.add('isRead');\n  }\n}\n\nfunction makeObjectNews(newsCard) {\n  const section = newsCard.querySelector('.home__list-section').textContent;\n  const img = newsCard.querySelector('.home__list-img').src;\n  const alt = newsCard.querySelector('.home__list-img').alt;\n  const title = newsCard.querySelector('.home__list-title').textContent;\n  const text = newsCard.querySelector('.home__list-text').textContent;\n  const date = newsCard.querySelector('.home__list-date').textContent;\n  const link = newsCard.querySelector('.home__list-link').href;\n  const dateOfRead = createNewData();\n\n  const newsObj = {\n    section,\n    img,\n    alt,\n    title,\n    text,\n    date,\n    link,\n\n    isRead: true,\n    dateOfRead,\n  };\n\n  return newsObj;\n}\n\nfunction createNewData() {\n  return new Date(Date.now()).toLocaleString().split(',')[0];\n}\n\nfunction makeArrNewsForPageRead() {\n  try {\n    const newsAllGetLocalStorage = JSON.parse(\n      localStorage.getItem(refs.KEY_LOCAL_STORAGE)\n    );\n\n    const arrNewsIsRead = newsAllGetLocalStorage.reduce((arrNews, news) => {\n      if (news.isRead) {\n        arrNews.push(news);\n      }\n\n      return arrNews;\n    }, []);\n\n    makeMarkapPageRead(arrNewsIsRead);\n  } catch (error) {\n    console.log(error);\n    container.innerHTML = getMarkupError();\n  }\n}\n\nfunction makeMarkapPageRead(arrayNewsRead) {\n  const allDates = arrayNewsRead\n    .flatMap(newsRead => newsRead.dateOfRead)\n    .filter((date, idx, arr) => arr.indexOf(date) === idx);\n\n  function makeArrNewsDate(date, arrNews) {\n    const arrFilterDataNews = arrNews.filter(news => news.dateOfRead === date);\n    return getMarkup(arrFilterDataNews);\n  }\n\n  const markapDatesRead = allDates\n    .map(\n      date =>\n        `<li class=\"readPage-list__item\">\n        <h2 class=\"readPage-list__title\">${date.replaceAll('.', '/')}</h2>\n        <svg class=\"readPage-list__svg\" aria-label=\"open news\" width=\"15px\" height=\"20px\">\n        <use href=\"/icons.adfc4680.svg#dilka-bottom\"></use>\n    </svg>\n    <ul class=\"read-page-list__list\">${makeArrNewsDate(\n      date,\n      arrayNewsRead\n    )}</ul>\n    </li>`\n    )\n    .join('');\n\n  listReadNews.insertAdjacentHTML('beforeend', markapDatesRead);\n}\n\nlistReadNews.addEventListener('click', openListsReadNews);\n\nfunction openListsReadNews(e) {\n  if (e.target.nodeName !== 'H2') {\n    return;\n  }\n\n  const titleDate = e.target;\n  titleDate.nextSibling.nextSibling.classList.toggle('visually-hidden');\n}\n\nfunction openListsReadNews(e) {\n  if (e.target.nodeName !== 'H2') {\n    return;\n  }\n\n  if (e.target.nodeName !== 'H2') {\n    return;\n  }\n\n  const titleDate = e.target;\n  titleDate.nextElementSibling.classList.toggle('is-open');\n  titleDate.nextElementSibling.nextElementSibling.classList.toggle(\n    'visually-hidden'\n  );\n}\n\nexport { onBtnReadMore, makeArrNewsForPageRead };\n\nconst checkData = {\n  items: listReadNews,\n  removeClass: 'weather-container',\n  innerList: '.read-page-list__list',\n};\n\nfunction checkWeatherInReadPage({ items, removeClass, innerList }) {\n  for (let list of items.children) {\n    const innerItems = list.querySelector(innerList);\n    for (let item of innerItems.children) {\n      if (item.classList.contains(removeClass)) {\n        item.remove();\n      }\n    }\n  }\n}\n\ncheckWeatherInReadPage(checkData);\n","import { makeArrNewsForPageRead } from './read';\nimport { refs } from './refs';\nimport { getMarkup } from './fetches/getMarkup';\n\nconst readPageList = document.querySelector('.readPage-list');\n// const list = document.querySelector('read-page-list__list');\n\nfunction onSearchFilter() {\n  const searchInput = document.querySelector('.search__input');\n  if (window.location.pathname !== '/index.html') {\n    searchInput.addEventListener('input', filtered);\n  }\n}\n\nfunction filtered(event) {\n  const value = event.currentTarget.value;\n  const localArray = JSON.parse(\n    localStorage.getItem('news-state-local-storage')\n  );\n\n  const filteredArray = localArray.filter(({ title }) => title.includes(value));\n  readPageList.innerHTML = getMarkup(filteredArray);\n}\n\nexport { onSearchFilter };\n"],"names":["$eLjGg","parcelRequire","document","querySelector","$103c6abfc3a0e310$var$container","$103c6abfc3a0e310$var$listReadNews","$103c6abfc3a0e310$var$createNewData","Date","now","toLocaleString","split","newsAllGetLocalStorage","JSON","parse","localStorage","getItem","$krGWQ","refs","KEY_LOCAL_STORAGE","arrayNewsRead","makeArrNewsDate","date","arrNews","arrFilterDataNews","filter","news","dateOfRead","$8ySVs","getMarkup","markapDatesRead","flatMap","newsRead","idx","arr","indexOf","map","replaceAll","join","insertAdjacentHTML","$103c6abfc3a0e310$var$makeMarkapPageRead","reduce","isRead","push","error","console","log","innerHTML","getMarkupError","$103c6abfc3a0e310$export$bb2c5c283da8e9cc","addEventListener","e","target","nodeName","newsCard","parentNode","newsObj","section","textContent","img","src","alt","title","text","link","href","$103c6abfc3a0e310$var$makeObjectNews","newsAllLocalStorage","setItem","stringify","every","newNewsAllLocalStorage","newArr","classList","contains","add","$e4bIU","default","titleDate","nextElementSibling","toggle","items","removeClass","innerList","list","children","innerItems","item","remove","$103c6abfc3a0e310$var$checkWeatherInReadPage"],"version":3,"file":"read.26e17060.js.map"}