{"mappings":"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","sources":["src/js/favorite.js","src/js/renderCard.js"],"sourcesContent":["import { getMarkup } from './fetches/getMarkup';\nimport { refs } from './refs';\nimport RenderFavorites from './renderCard';\nimport throttle from 'lodash.throttle';\nimport { getMarkupError } from './error';\n\n// const form = document.querySelector('.demo-form');\n// const input = document.querySelector('.demo-input');\nconst renderFavorites = new RenderFavorites();\nconst cardContainer = document.querySelector('.card-container');\nconst favoriteMain = document.querySelector('.favorite-main');\n\n// form.addEventListener(\n//   'submit',\n//   throttle(e => {\n//     onArticleLike(e);\n//   }, 300)\n// );\n\nexport function onArticleLike(e) {\n  e.preventDefault();\n\n  const form = e.currentTarget;\n  const value = form.elements.articleName.value.trim();\n\n  renderFavorites.renderCards();\n\n  let bodyRef = e.target;\n  let myCard = bodyRef.parentNode.parentNode;\n  let liRef = myCard.querySelector('.wrapper');\n\n  let titleRef = myCard.querySelector('.card-header');\n  let cardTextRef = myCard.querySelector('.card-text');\n  let imgUrlRef = myCard.querySelector('.box > img[src]');\n  let imgNameRef = myCard.querySelector('.box > img[alt]');\n  let publishDateRef = myCard.querySelector('.card-details > .card-date');\n  let mainURLRef = myCard.querySelector('.card-details > .card-link');\n\n  let img = imgUrlRef.getAttribute('src');\n  let imgName = imgNameRef.textContent;\n  let title = titleRef.textContent;\n  let text = cardTextRef.textContent;\n  let date = publishDateRef.textContent;\n  let link = mainURLRef.getAttribute('href');\n  let section = myCard.querySelector('.box > p');\n\n  let myObject = {\n    img,\n    imgName,\n    title,\n    text,\n    date,\n    link,\n    section,\n\n    isFavourite: false,\n  };\n\n  const cardObject = `<div class=\"wrapper\">\n<div class=\"box home__list-top\">\n<p class=\"home__list-section\">${myObject.section}</p>\n<img class=\"box-img\"\nsrc=\"${myObject.img}\"\nalt=\"${myObject.imgName}\" width=\"353\" height=\"395\">\n        <button type=\"button\" id=\"like\" class=\"add-button remove-button\">Add to favorite</button>\n</div>\n<h1 class=\"card-header\">${myObject.title}</h1>\n<p class=\"card-text\">${myObject.text}</p>\n<div class=\"card-details\">\n<p class=\"card-date\">${myObject.date}</p>\n    <a class=\"card-link\" href=\"\">${myObject.link}</a>\n</div>\n</div>`;\n  cardContainer.insertAdjacentHTML('beforeend', cardObject);\n}\n\nconst card = document.querySelector('.card-container');\ncard.addEventListener('click', onLike);\n\nlet arr = [];\n\nfunction onLike(e) {\n  let bodyRef = e.target;\n  let myCard = bodyRef.parentNode.parentNode;\n  let liRef = myCard.querySelector('.home__list-item');\n\n  let titleRef = myCard.querySelector('.home__list-title');\n  let cardTextRef = myCard.querySelector('.home__list-text');\n  let imgUrlRef = myCard.querySelector('.home__list');\n  let imgNameRef = myCard.querySelector('.home__list-top > img[alt]');\n  let publishDateRef = myCard.querySelector(\n    '.home__list-footer > .home__list-date'\n  );\n  let mainURLRef = myCard.querySelector(\n    '.home__list-footer > .home__list-link'\n  );\n  let section = myCard.querySelector('.home__list-section');\n\n  let img = imgUrlRef.getAttribute('src');\n  let title = titleRef.textContent;\n  let text = cardTextRef.textContent;\n  let date = publishDateRef.textContent;\n  let link = mainURLRef.getAttribute('href');\n\n  let myObject = {\n    img,\n    title,\n    text,\n    date,\n    link,\n    section,\n  };\n\n  if (e.target.classList.contains('remove-button')) {\n    e.target.classList.toggle('remove-button');\n    e.target.textContent = 'Remove from favorite';\n    try {\n      const newsArr = JSON.parse(localStorage.getItem(refs.KEY_LOCAL_STORAGE));\n      if (newsArr === null) {\n        localStorage.setItem(\n          refs.KEY_LOCAL_STORAGE,\n          JSON.stringify([myObject])\n        );\n        return;\n      }\n      if (newsArr !== null) {\n        for (const news of newsArr) {\n          if (news.link === myObject.link) {\n            news.isFavorite = true;\n            return;\n          }\n        }\n      }\n      newsArr.push(myObject);\n      localStorage.setItem(refs.KEY_LOCAL_STORAGE, JSON.stringify(newsArr));\n    } catch (error) {\n      const errorMarkup = getMarkupError();\n      favoriteMain.innerHTML = errorMarkup;\n    }\n  } else if (e.target.classList.contains('add-button')) {\n    e.target.classList.toggle('remove-button');\n    e.target.textContent = 'Add to favorite';\n    try {\n      const newsArr = JSON.parse(localStorage.getItem(refs.KEY_LOCAL_STORAGE));\n      for (const news of newsArr) {\n        if (news.link === myObject.link) {\n          news.isFavorite = false;\n        }\n      }\n      localStorage.setItem(refs.KEY_LOCAL_STORAGE, JSON.stringify(newsArr));\n    } catch (error) {\n      const errorMarkup = getMarkupError();\n      favoriteMain.innerHTML = errorMarkup;\n    }\n  }\n}\n\nexport function onLoad() {\n  const arr = JSON.parse(localStorage.getItem(refs.KEY_LOCAL_STORAGE));\n\n  if (arr === null) {\n    const errorMarkup = getMarkupError();\n    favoriteMain.innerHTML = errorMarkup;\n  }\n  return getMarkup(arr);\n}\n\nexport function renderCards() {\n  cardContainer.innerHTML = onLoad();\n}\n\nif (onLoad() !== undefined) renderCards();\n\n// --------------------------------------------------------------------------------------------------------\n\n// function onLike(e) {\n//   let bodyRef = e.target;\n//   let myCard = bodyRef.parentNode.parentNode;\n//   let liRef = myCard.querySelector('.wrapper');\n\n//   let titleRef = myCard.querySelector('.card-header');\n//   let cardTextRef = myCard.querySelector('.card-text');\n//   let imgUrlRef = myCard.querySelector('.box > img[src]');\n//   let imgNameRef = myCard.querySelector('.box > img[alt]');\n//   let publishDateRef = myCard.querySelector('.card-details > .card-date');\n//   let mainURLRef = myCard.querySelector('.card-details > .card-link');\n\n//   let img = imgUrlRef.getAttribute('src');\n//   let imgName = imgNameRef.textContent;\n//   let title = titleRef.textContent;\n//   let text = cardTextRef.textContent;\n//   let date = publishDateRef.textContent;\n//   let link = mainURLRef.getAttribute('href');\n\n//   let myObject = {\n//     img,\n//     imgName,\n//     title,\n//     text,\n//     date,\n//     link,\n//     isFavorite: true,\n//   };\n\n//   if (e.target.classList.contains('remove-button')) {\n//     e.target.classList.toggle('remove-button');\n//     e.target.textContent = 'Remove from favorite';\n//     try {\n//       const newsArr = JSON.parse(localStorage.getItem(refs.KEY_LOCAL_STORAGE));\n//       if (newsArr === null) {\n//         localStorage.setItem(\n//           refs.KEY_LOCAL_STORAGE,\n//           JSON.stringify([myObject])\n//         );\n//         return;\n//       }\n//       if (newsArr !== null) {\n//         for (const news of newsArr) {\n//           if (news.link === myObject.link) {\n//             news.isFavorite = true;\n//             return;\n//           }\n//         }\n//       }\n//       newsArr.push(myObject);\n//       localStorage.setItem(refs.KEY_LOCAL_STORAGE, JSON.stringify(newsArr));\n//     } catch (error) {\n//       const errorMarkup = getMarkupError();\n//       favoriteMain.innerHTML = errorMarkup;\n//     }\n//   } else if (e.target.classList.contains('add-button')) {\n//     e.target.classList.toggle('remove-button');\n//     e.target.textContent = 'Add to favorite';\n//     try {\n//       const newsArr = JSON.parse(localStorage.getItem(refs.KEY_LOCAL_STORAGE));\n//       for (const news of newsArr) {\n//         if (news.link === myObject.link) {\n//           news.isFavorite = false;\n//         }\n//       }\n//       localStorage.setItem(refs.KEY_LOCAL_STORAGE, JSON.stringify(newsArr));\n//     } catch (error) {\n//       const errorMarkup = getMarkupError();\n//       favoriteMain.innerHTML = errorMarkup;\n//     }\n//   }\n// }\n\n// function onLoad() {\n//   const array = JSON.parse(localStorage.getItem('myFavoriteItem'));\n//   let markup = array.reduce((acc, el) => {\n//     if (el.isFavorite === true) {\n//       cardMarkup(el) + acc;\n//     } else acc;\n//   }, '');\n//   function cardMarkup({ img, imgName, title, text, date, link, section }) {\n//     return `<div class=\"wrapper\">\n//     <div class=\"box home__list-top\">\n//     <p class=\"home__list-section\">${section}</p>\n//         <img class=\"box-img\"\n//             src=\"${img}\"\n//             alt=\"${imgName}\" width=\"353\" height=\"395\">\n//             <button type=\"button\" id=\"like\" class=\"add-button remove-button\">Add to favorite</button>\n//     </div>\n//     <h1 class=\"card-header\">${title}</h1>\n//     <p class=\"card-text\">${text}</p>\n//     <div class=\"card-details\">\n//         <p class=\"card-date\">${date}</p>\n//         <a id='news-link' class=\"card-link\" href=\"\">${link}</a>\n//     </div>\n//   </div>\n//   `;\n//   }\n//   return markup;\n// }\n// function renderCards() {\n//   cardContainer.innerHTML = onLoad();\n// }\n// ------------------------------------------------------------------------------------------------------\n","const cardContainer = document.querySelector('.card-container');\n\nexport default class RenderFavorites {\n  renderCards() {\n    this.cardObject = `<div class=\"wrapper\">\n    <div class=\"box home__list-top\">\n    <p class=\"home__list-section\">Job section</p>\n        <img class=\"box-img\"\n            src=\"https://images.pexels.com/photos/10937018/pexels-photo-10937018.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n            alt=\"building\" width=\"353\" height=\"395\">\n            <button type=\"button\" id=\"like\" class=\"add-button remove-button\">Add to favorite</button>\n    </div>\n    <h1 class=\"card-header\">8 tips for passing an online interview that will help you get a job</h1>\n    <p class=\"card-text\">Before you start looking for a job, it is useful to familiarize yourself with the job prospects\n        offered by these...</p>\n    <div class=\"card-details\">\n        <p class=\"card-date\">20/02/2021</p>\n        <a id='news-link'class=\"card-link\" href=\"first\">Read more</a>\n    </div>\n  </div>\n  <div class=\"wrapper\">\n    <div class=\"box home__list-top\">\n    <p class=\"home__list-section\">Job section</p>\n        <img class=\"box-img\"\n            src=\"https://images.pexels.com/photos/10937018/pexels-photo-10937018.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n            alt=\"building\" width=\"353\" height=\"395\">\n            <button type=\"button\" id=\"like\" class=\"add-button remove-button\">Add to favorite</button>\n    </div>\n    <h1 class=\"card-header\">Header 2</h1>\n    <p class=\"card-text\">Before you start looking for a job, it is useful to familiarize yourself with the job prospects\n        offered by these...</p>\n    <div class=\"card-details\">\n        <p class=\"card-date\">20/02/2021</p>\n        <a id='news-link'class=\"card-link\" href=\"second\">Read more</a>\n    </div>\n  </div>\n  <div class=\"wrapper\">\n    <div class=\"box home__list-top\">\n    <p class=\"home__list-section\">Job section</p>\n        <img class=\"box-img\"\n            src=\"https://images.pexels.com/photos/10937018/pexels-photo-10937018.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n            alt=\"building\" width=\"353\" height=\"395\">\n            <button type=\"button\" id=\"like\" class=\"add-button remove-button\">Add to favorite</button>\n    </div>\n    <h1 class=\"card-header\">Header 3</h1>\n    <p class=\"card-text\">Before you start looking for a job, it is useful to familiarize yourself with the job prospects\n        offered by these...</p>\n    <div class=\"card-details\">\n        <p class=\"card-date\">20/02/2021</p>\n        <a id='news-link' class=\"card-link\" href=\"third\">Read more</a>\n    </div>\n  </div>`;\n    cardContainer.insertAdjacentHTML('beforeend', this.cardObject);\n  }\n}\n\nfunction onLike() {\n  const savedNews = localStorage.getItem('myFavoriteNews');\n  let isStored = localStorage.getItem(item) !== null;\n  if (isStored) {\n    localStorage.removeItem(item);\n    cardContainer.innerHTML = this.cardObject;\n    console.log('added');\n  } else {\n    localStorage.setItem('myFavoriteNews', JSON.stringify(arr));\n    cardContainer.innerHTML = this.cardObject;\n    console.log('removed');\n  }\n}\n"],"names":["$9cYNk","parcelRequire","$8MBJY","$4281325854b5f9f0$var$cardContainer","document","querySelector","$4281325854b5f9f0$export$2e2bcd8739ae039","RenderFavorites","key","this","cardObject","insertAdjacentHTML","$8bf2312eefa07846$var$cardContainer","$8bf2312eefa07846$var$favoriteMain","addEventListener","e","myCard","target","parentNode","titleRef","cardTextRef","imgUrlRef","publishDateRef","mainURLRef","section","img","getAttribute","title","textContent","text","date","link","myObject","classList","contains","toggle","newsArr","JSON","parse","localStorage","getItem","$4Nugj","refs","KEY_LOCAL_STORAGE","setItem","stringify","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","news","value","isFavorite","err","return","push","error","errorMarkup","$9XI3k","getMarkupError","innerHTML","newsArr1","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","news1","errorMarkup1","$8bf2312eefa07846$export$4e4d8b287d028b6b","arr1","getMarkup"],"version":3,"file":"favorite.d443a105.js.map"}