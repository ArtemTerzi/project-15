{"mappings":"AAEA,MAAMA,EAAM,oGACKC,SAASC,cAAc,eAE/BC,iBAAiB,SAc1BC,iBACI,KAUJ,SAAkBC,GACd,MAAMC,EAAaD,EAAQE,KAAI,EAACC,SAAEA,EAAQC,QAAEA,EAAOC,SAAEA,EAAQC,QAAEA,KAC3D,wDACyBH,mCACPG,kCACAD,2BACPD,6EAGPG,KAAK,IACbC,EAASC,mBAAmB,YAAYR,E,CAjBxCS,QAhBJX,iBACA,IACI,MAAMY,QAAiBC,MAAMjB,GAE7B,aADsBgB,EAASE,M,CAG7B,MAAMC,GAERC,QAAQC,IAAIF,E,EAOUG,IACLN,SAASO,K,CAExB,MAAMC,GACJJ,QAAQC,IAAIG,E,KAoBpB,MACMX,EAAWZ,SAASC,cAAc,cACxCW,EAASV,iBAAiB,SAQ1B,SAAuBsB,GAKnB,GAHAA,EAAEC,iBAGuB,MAAtBD,EAAEE,OAAOC,SACR,OAGJ,MAAMC,EAdC,IAAIC,KAAKA,KAAKC,OAAOC,iBAAiBC,MAAM,KAAK,GAelDC,EAAoBT,EAAEE,OAAOQ,WAAWC,UAAUC,OAExD,IACI,MAAMC,EAAqBC,KAAKC,MAAMC,aAAaC,QAvBjC,sBAyBlB,GAA0B,OAAvBJ,EACC,GAAGK,OAAOC,KAAKN,GAAoBO,SAAShB,GAAe,CAEvD,GAAGS,EAAmBT,GAAcgB,SAASX,GACzC,OAGJI,EAAmBT,GAAciB,KAAKZ,GACtCO,aAAaM,QAjCH,oBAiC8BR,KAAKS,UAAUV,G,MAGvDA,EAAmBT,GAAgB,CAACK,GACpCO,aAAaM,QArCH,oBAqC8BR,KAAKS,UAAUV,QAIvD,CAEJ,MAAMW,EAAoB,GAC1BA,EAAkBpB,GAAgB,CAACK,GACnCd,QAAQC,IAAI4B,GAEZR,aAAaM,QA/CC,oBA+C0BR,KAAKS,UAAUC,G,EAG7D,MAAM9B,GACJC,QAAQC,IAAI,Y,KAKApB,SAASC,cAAc,cAE/BC,iBAAiB,SAK7B,WACI,IACI,MAAM+C,EAAqBX,KAAKC,MAAMC,aAAaC,QAjEjC,sBA0ElB,IAAKS,OAAOD,EAAoB,CAC5B,MAAME,EAAY,yBAAyBD,2DAC3CE,EAAavC,mBAAmB,YAAasC,GACxBnD,SAASC,cAAc,cAA5C,MACMoD,EAAerD,SAASC,cAAc,mBAI5C,IAAK,IAAIqD,EAAI,EAAGA,EAAIL,EAAmBC,KAAKK,OAAQD,GAAK,EAAG,CACxD,MAAME,EAAUP,EAAmBC,KAAKI,GACxCnC,QAAQC,IAAIoC,GAEZ,MAAMC,EAAuB,uBAAuBD,SACpDH,EAAaxC,mBAAmB,YAAa4C,E,GAcvD,MAAMvC,GACJC,QAAQC,IAAIF,E,KA1CpB,MAAMkC,EAAepD,SAASC,cAAc,mBAgD5CmD,EAAalD,iBAAiB,SAE9B,SAA2BsB,GAEvB,GAAyB,OAAtBA,EAAEE,OAAOC,SACR,OAGJ,MAAM0B,EAAe7B,EAAEE,OAAOgC,SAElC,IAAK,MAAMF,KAAWH,EAClBG,EAAQG,UAAUC,OAAO,kB","sources":["src/js/read.js"],"sourcesContent":["\n// =======================  FOR TEST ==============================\nconst URL = `https://api.nytimes.com/svc/search/v2/articlesearch.json?api-key=MCCbLUuNkLgrOf1uBr1c9zmSoKm3Mp9g`;\nconst btnFetch = document.querySelector('.test-fetch');\n\nbtnFetch.addEventListener('click', onOpenNews);\n\nasync function onFetch() {\ntry {\n    const response = await fetch(URL);\n    const newsAll = await response.json();\n    return newsAll;\n\n    } catch(err) {\n\n    console.log(err);\n    };\n};\n\nasync function onOpenNews() {\n    try {\n        \n    const newsAll = await onFetch();\n    makeNews(newsAll.response.docs);\n\n    } catch(error) {\n        console.log(error);\n    };\n};\n\nfunction makeNews(arrNews) {\n    const markapNews = arrNews.map(({ abstract, web_url, pub_date, snippet }) => \n        `<li class=\"li-news\">\n        <h2 class=\"title-news\">${abstract}</h2>\n        <p class=\"text\">${snippet}</p>\n        <p class=\"data\">${pub_date}</p>\n        <a href=\"${web_url}\" class=\"link-news\">\n            Read more...\n        </a>\n    </li>`).join('');\n    listNews.insertAdjacentHTML('beforeend',markapNews);\n\n};\n\n// =======================  FOR TEST ==============================\n\nconst KEY_LOCAL_STORAGE = 'read-news-storage';\nconst listNews = document.querySelector('.list-news');\nlistNews.addEventListener('click', onBtnReadMore);\n\nfunction createNewData() {\n    return new Date(Date.now()).toLocaleString().split(',')[0];\n};\n\n\n\nfunction onBtnReadMore(e) {\n    // =======================  FOR TEST ==============================\n    e.preventDefault();\n    // =======================  FOR TEST ==============================\n\n    if(e.target.nodeName !== 'A') {\n        return;\n    };\n\n    const dateReadNews = createNewData();\n    const stringMarkupNews = (e.target.parentNode.innerHTML.trim());\n    \n    try {\n        const getObjLocalStorage = JSON.parse(localStorage.getItem(KEY_LOCAL_STORAGE));\n\n        if(getObjLocalStorage !== null) {\n            if(Object.keys(getObjLocalStorage).includes(dateReadNews)) {\n\n                if(getObjLocalStorage[dateReadNews].includes(stringMarkupNews)) {\n                    return;\n                };\n\n                getObjLocalStorage[dateReadNews].push(stringMarkupNews);\n                localStorage.setItem(KEY_LOCAL_STORAGE, JSON.stringify(getObjLocalStorage));\n\n            } else {\n                getObjLocalStorage[dateReadNews] = [stringMarkupNews];\n                localStorage.setItem(KEY_LOCAL_STORAGE, JSON.stringify(getObjLocalStorage));\n\n            };\n\n        }  else {\n\n            const obgDataPlusMarkup = {};\n            obgDataPlusMarkup[dateReadNews] = [stringMarkupNews];\n            console.log(obgDataPlusMarkup);\n\n            localStorage.setItem(KEY_LOCAL_STORAGE, JSON.stringify(obgDataPlusMarkup));\n        };\n\n    } catch(err) {\n        console.log('err parse');\n    }\n};\n\n\nconst btnReadPage = document.querySelector('.read-page');\n\nbtnReadPage.addEventListener('click', makeMarkapPageRead);\n\nconst listReadNews = document.querySelector('.list-read-news');\n\n\nfunction makeMarkapPageRead() {\n    try {\n        const resultLocalStorage = JSON.parse(localStorage.getItem(KEY_LOCAL_STORAGE));\n        // console.log(resultLocalStorage);\n        // let arrAllNewsReadForPage = Object.kays(resultLocalStorage);\n\n        // const markapPageRead = arrAllNewsReadForPage.map(date => {\n        //     console.log(date);\n            \n        //     // return arrDate.map(elementsOneNewsRead => `<li>${elementsOneNewsRead}</li>`).join();\n        // });\n        for (key in resultLocalStorage) {\n            const dataTitle = `<li class=\"list-date\">${key}<ul class=\"list-date-read visually-hidden\"></ul></li>`;\n            listReadNews.insertAdjacentHTML('beforeend', dataTitle);\n            const itemDateRead = document.querySelector('.list-date');\n            const listDateRead = document.querySelector('.list-date-read');\n            // console.log(listDateRead);\n            // const arrForMarkupReadPage = resultLocalStorage[key].map(newsRead => `<li>${newsRead}</li>`).join();\n            \n            for (let i = 0; i < resultLocalStorage[key].length; i += 1) {\n                const element = resultLocalStorage[key][i];\n                console.log(element);\n\n                const arrForMarkupReadPage = `<li class=\"li-news\">${element}</li>`;\n                listDateRead.insertAdjacentHTML('beforeend', arrForMarkupReadPage);\n            }\n\n            // listDateRead.insertAdjacentHTML('beforeend', arrForMarkupReadPage);\n\n            // itemDateRead.addEventListener('click', openListsReadNews);\n        \n            function openListsReadNews(e) {\n                e.target.firstElementChild.classList.toggle('visually-hidden');\n            }\n        };\n\n        // console.log(markapPageRead);\n        // listReadNews.insertAdjacentHTML('beforeend', markapPageRead);\n    } catch(err) {\n        console.log(err);\n    }\n};\n\n\n\nlistReadNews.addEventListener('click', openListsReadNews);\n        \nfunction openListsReadNews(e) {\n\n    if(e.target.nodeName !== 'LI') {\n        return;\n    };\n\n    const listDateRead = e.target.children;\n\nfor (const element of listDateRead) {\n    element.classList.toggle(\"visually-hidden\");\n}\n};"],"names":["$103c6abfc3a0e310$var$URL","document","querySelector","addEventListener","async","arrNews","markapNews","map","abstract","web_url","pub_date","snippet","join","$103c6abfc3a0e310$var$listNews","insertAdjacentHTML","$103c6abfc3a0e310$var$makeNews","response","fetch","json","err","console","log","$103c6abfc3a0e310$var$onFetch","docs","error","e","preventDefault","target","nodeName","dateReadNews","Date","now","toLocaleString","split","stringMarkupNews","parentNode","innerHTML","trim","getObjLocalStorage","JSON","parse","localStorage","getItem","Object","keys","includes","push","setItem","stringify","obgDataPlusMarkup","resultLocalStorage","key","dataTitle","$103c6abfc3a0e310$var$listReadNews","listDateRead","i","length","element","arrForMarkupReadPage","children","classList","toggle"],"version":3,"file":"read.2c252324.js.map"}