{"mappings":"AAWQ,SAASA,EAAcC,GAC9BA,EAAOC,UAAY,E,CCTpB,MAAMC,EAAmB,ICHzB,MAYCC,eACC,OAAO,IAAIC,MAAOC,Q,CAGnBC,eAAeC,GACd,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAGlCC,iBAAiBC,GAChB,MAAMC,EAAaD,EAAKE,QAAQC,KAAI,EAACC,YAAEA,KAAkBA,IAAaC,KAAK,MACrEC,EAAOC,KAAKC,MAAMR,EAAKS,KAAKH,MAC5BI,EAAO,IAAIjB,KACXkB,EAAc,GAAGC,KAAKjB,eAAee,EAAKG,cAAcD,KAAKE,OAAOJ,EAAKK,eAAeL,EAAKM,gBAEnG,IAAIC,EAAoB,GAUxB,OARIX,EAAO,GACVW,EAAoB,MACVX,GAAQ,EAAIA,GAAQ,GAC9BW,EAAoB,SACVX,EAAO,IACjBW,EAAoB,QAGd,gIAG+BX,IAAOM,KAAKM,wHAELjB,+DACGD,EAAKmB,oFAGfF,kIAKOL,KAAKQ,WAAWR,KAAKpB,0EACpBmB,qG,CAlD/CU,cACCT,KAAKQ,WAAa,CACjB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE3CR,KAAKE,OAAS,CACb,MAAO,MAAO,QAAS,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,OAGlFF,KAAKM,QAAU,O,OD6DjBI,EAjEA,MAMCC,eAC0C,IAArCX,KAAKY,YAAYC,SAASC,QAClBd,KAAKY,YDLXG,mBAAmB,YAPX,iICabf,KAAKgB,aAAahB,KAAKY,cAEvBpC,EAAcwB,KAAKY,Y,CAIrBI,aAAavC,GACZA,EAAOwC,UAAUC,IAAI,O,CAGtBC,gBAAgB1C,GACfA,EAAOwC,UAAUG,OAAO,O,CAGzBC,kBAAmBC,GAClB,IACC,MAAMC,EAAiBC,SAASC,cAAc,oBACxCC,QAAiBJ,EAASK,OAAOD,SAGjCE,EAAW,oEAAoEF,eAF7DJ,EAASK,OAAOE,mBAEgF7B,KAAK8B,SAEvHC,QAAiBC,MAAMJ,GACvBxC,QAAa2C,EAASE,aACtBjC,KAAKY,YAAYG,mBAAmB,YAAapC,EAAiBQ,iBAAiBC,IAErFY,KAAKY,YAAYC,SAASC,OAAS,IACtCd,KAAKmB,gBAAgBnB,KAAKY,aAC1BZ,KAAKmB,gBAAgBI,GACrB/C,EAAc+C,G,CAEd,MAAOW,GACRC,QAAQC,IAAIF,E,EAIdb,eAAea,GACd,IACC,MAAMG,EAAMH,EAAMI,QACZf,EAAiBC,SAASC,cAAc,oBACxCc,EAAW,6EAA6EvC,KAAK8B,SAC7FC,QAAiBC,MAAMO,GACvBnD,QAAa2C,EAASE,aAEtBjC,KAAKmB,gBAAgBnB,KAAKY,mBAC1BZ,KAAKmB,gBAAgBI,GAC3BA,EAAe7C,UAAY,SACrBsB,KAAKY,YAAYG,mBAAmB,YAAapC,EAAiBQ,iBAAiBC,IAEzF+C,QAAQC,IAAIC,E,CACX,MAAOG,GACRL,QAAQC,IAAII,E,EA3Dd/B,cACCT,KAAKY,YAAcY,SAASC,cAAc,YAC1CzB,KAAK8B,OAAS,kC,IENT,WACL,MAAMW,EAAiB,IAAI/B,EAE3BgC,UAAUC,YAAYC,mBACpBH,EAAeI,YAAYC,KAAKL,GAChCA,EAAeM,SAASD,KAAKL,IAG/BA,EAAe9B,c,CCEjB","sources":["src/js/weather/spinner.js","src/js/weather/weather-news-api.js","src/js/weather/waether-markup.js","src/js/weather/weather.js","src/index.js"],"sourcesContent":["export function addSpinner(parent) {\n\tconst murkup = `\n\t<div class=\"preload-wrapper load\">\n\t\t<div class=\"preload\">\n\t\t\t<div class=\"loader\"></div>\n\t\t</div>\n\t</div>\n\t`\n\tparent.insertAdjacentHTML(\"beforeend\", murkup);\n}\n\n export function removeSpinner(parent) {\n\tparent.innerHTML = \"\";\n}","import WeatherMarkupApi from \"./waether-markup\";\nimport { addSpinner, removeSpinner } from \"./spinner\";\n\nconst weatherMarkupApi = new WeatherMarkupApi();\n\nclass WeatherNewsApi {\n\tconstructor() {\n\t\tthis.weatherElem = document.querySelector(\".weather\");\n\t\tthis.apiKey = \"c76da9d16a38d15146607ff522b06c37\";\n\t}\n\n\tcheckWeather() {\n\t\tif (this.weatherElem.children.length === 0) {\n\t\t\taddSpinner(this.weatherElem);\n\t\t\tthis.addClassLoad(this.weatherElem);\n\t\t} else {\n\t\t\tremoveSpinner(this.weatherElem);\n\t\t}\n\t}\n\n\taddClassLoad(parent) {\n\t\tparent.classList.add(\"load\");\n\t}\n\n\tremoveClassLoad(parent) {\n\t\tparent.classList.remove(\"load\");\n\t}\n\n\tasync getSuccsess (position) {\n\t\ttry {\n\t\t\tconst preloadWrapper = document.querySelector(\".preload-wrapper\");\n\t\t\tconst latitude = await position.coords.latitude;\n\t\t\tconst longitude = await position.coords.longitude;\n\n\t\t\tconst BASE_URL = `https://api.openweathermap.org/data/2.5/weather?units=metric&lat=${latitude}&lon=${longitude}&appid=${this.apiKey}`;\n\n\t\t\tconst resopnse = await fetch(BASE_URL);\n\t\t\tconst data = await resopnse.json();\n\t\t\tawait this.weatherElem.insertAdjacentHTML(\"beforeend\", weatherMarkupApi.getWeatherMurkup(data));\n\n\t\t\tif (this.weatherElem.children.length > 0) {\n\t\t\t\tthis.removeClassLoad(this.weatherElem);\n\t\t\t\tthis.removeClassLoad(preloadWrapper);\n\t\t\t\tremoveSpinner(preloadWrapper);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tasync getError(error) {\n\t\ttry {\n\t\t\tconst msg = error.message;\n\t\t\tconst preloadWrapper = document.querySelector(\".preload-wrapper\");\n\t\t\tconst errorUrl = `https://api.openweathermap.org/data/2.5/weather?units=metric&q=Kyiv&appid=${this.apiKey}`;\n\t\t\tconst resopnse = await fetch(errorUrl);\n\t\t\tconst data = await resopnse.json();\n\n\t\t\tawait this.removeClassLoad(this.weatherElem);\n\t\t\tawait this.removeClassLoad(preloadWrapper);\n\t\t\tpreloadWrapper.innerHTML = \"\";\n\t\t\tawait this.weatherElem.insertAdjacentHTML(\"beforeend\", weatherMarkupApi.getWeatherMurkup(data));\n\n\t\t\tconsole.log(msg);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n}\n\nexport default WeatherNewsApi;","class WeatherMarkupApi {\n\tconstructor() {\n\t\tthis.daysOfWeek = [\n\t\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"\n\t\t];\n\t\tthis.months = [\n\t\t\t\"Jan\", \"Feb\", \"March\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n\t\t];\n\n\t\tthis.degrees = \"&deg;\";\n\t}\n\n\tgetDayNumber() {\n\t\treturn new Date().getDay();\n\t}\n\n\taddLeadingZero(value) {\n\t\treturn String(value).padStart(2, '0');\n\t}\n\n\tgetWeatherMurkup(data) {\n\t\tconst dsecripton = data.weather.map(({ description }) => description).join(\", \");\n\t\tconst temp = Math.round(data.main.temp);\n\t\tconst date = new Date();\n\t\tconst currentDate = `${this.addLeadingZero(date.getDate())} ${this.months[date.getMonth()]} ${date.getFullYear()}`;\n\n\t\tlet setClassOfWeather = \"\";\n\n\t\tif (temp > 10) {\n\t\t\tsetClassOfWeather = \"sun\";\n\t\t} else if (temp >= 0 & temp <= 10) {\n\t\t\tsetClassOfWeather = \"cloudy\";\n\t\t} else if (temp < 0) {\n\t\t\tsetClassOfWeather = \"cold\";\n\t\t}\n\n\t\treturn `\n\t\t<div class=\"weather-container\">\n\t\t\t<div class=\"weather-container__top\">\n\t\t\t\t<p class=\"weather-container__deg\">${temp}${this.degrees}</p>\n\t\t\t\t<div class=\"weather-container__top-wrapper\">\n\t\t\t\t\t<p class=\"weather-container__top-dsecr\">${dsecripton}</p>\n\t\t\t\t\t<p class=\"weather-container__top-location\">${data.name}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"weather-container__img ${setClassOfWeather}\">\n\t\t\t\t\n\t\t\t</div>\n\n\t\t\t<div class=\"weather-container__footer\">\n\t\t\t\t<p class=\"weather-container__footer-day\">${this.daysOfWeek[this.getDayNumber()]}</p>\n\t\t\t\t<p class=\"weather-container__footer-date\">${currentDate}</p>\n\t\t\t\t<button class=\"btn__footer-week\">weather for week</button>\n\t\t\t</div>\n\t\t</div>`\n\t}\n}\n\nexport default WeatherMarkupApi;","import WeatherNewsApi from './weather-news-api';\n\nexport function startWeather() {\n  const weatherNewsApi = new WeatherNewsApi();\n\n  navigator.geolocation.getCurrentPosition(\n    weatherNewsApi.getSuccsess.bind(weatherNewsApi),\n    weatherNewsApi.getError.bind(weatherNewsApi)\n  );\n\n  weatherNewsApi.checkWeather();\n}\n","import { refs, options } from './js/refs';\nimport './js/categoryListMaker';\nimport './js/createMarkup';\nimport './js/favorite';\nimport './js/fetchData';\nimport './js/filter';\nimport './js/themeSwaper';\nimport './js/paginator';\n// import './js/weather/weather';\nimport { startWeather } from './js/weather/weather';\nimport { formToJSON } from 'axios';\n\nstartWeather();\n"],"names":["$e204ad54c4d948ab$export$a22167e2c2916132","parent","innerHTML","$d7d21c2e28e72f3c$var$weatherMarkupApi","getDayNumber","Date","getDay","addLeadingZero","value","String","padStart","getWeatherMurkup","data","dsecripton","weather","map","description","join","temp","Math","round","main","date","currentDate","this","getDate","months","getMonth","getFullYear","setClassOfWeather","degrees","name","daysOfWeek","constructor","$d7d21c2e28e72f3c$export$2e2bcd8739ae039","checkWeather","weatherElem","children","length","insertAdjacentHTML","addClassLoad","classList","add","removeClassLoad","remove","async","position","preloadWrapper","document","querySelector","latitude","coords","BASE_URL","longitude","apiKey","resopnse","fetch","json","error","console","log","msg","message","errorUrl","error1","weatherNewsApi","navigator","geolocation","getCurrentPosition","getSuccsess","bind","getError"],"version":3,"file":"read.c45ba20b.js.map"}