{"mappings":"AAEA,MAAMA,EAAM,oGACKC,SAASC,cAAc,eAE/BC,iBAAiB,SAc1BC,iBACI,KAUJ,SAAkBC,GAEd,IACI,MAAMC,EAAaD,EAAQE,KAAI,EAACC,SAAEA,EAAQC,QAAEA,EAAOC,SAAEA,EAAQC,QAAEA,EAAOC,WAAEA,EAAUC,SAAEA,KACpF,4FAC2DD,EAAW,GAAGE,aAAaD,EAAS,GAAGE,gUAMjEP,EAASQ,mDACXL,8GAGA,IAAIM,KAAKP,GAAUQ,iBAAiBC,MAAM,KAAK,8BACjEV,4EAELW,KAAK,IACbC,EAASC,mBAAmB,YAAYhB,E,CAC1C,MAAMiB,GACJ,MAAMjB,EAAaD,EAAQE,KAAI,EAACC,SAAEA,EAAQC,QAAEA,EAAOC,SAAEA,EAAQC,QAAEA,EAAOC,WAAEA,EAAUC,SAAEA,KACpF,iJACgHA,EAAS,GAAGE,gUAM3FP,EAASQ,mDACXL,8GAGA,IAAIM,KAAKP,GAAUQ,iBAAiBC,MAAM,KAAK,8BACjEV,4EAELW,KAAK,IACbC,EAASC,mBAAmB,YAAYhB,E,EA5C5CkB,QAhBJpB,iBACA,IACI,MAAMqB,QAAiBC,MAAM1B,GAE7B,aADsByB,EAASE,M,CAG7B,MAAMJ,GAERK,QAAQC,IAAIN,E,EAOUO,IACLL,SAASM,K,CAExB,MAAMC,GACJJ,QAAQC,IAAIG,E,KA+CpB,MACMX,EAAWpB,SAASC,cAAc,cASxCmB,EAASlB,iBAAiB,SAE1B,SAAuB8B,GAKnB,GAHAA,EAAEC,iBAGuB,MAAtBD,EAAEE,OAAOC,SACR,OAIJ,IAAIC,EAAWJ,EAAEE,OAAOG,WAAWA,WAC/BC,EAAMF,EAASnC,cAAc,mBAAmBsC,IAChDC,EAAMJ,EAASnC,cAAc,mBAAmBuC,IAChDC,EAAQL,EAASnC,cAAc,qBAAqByC,YACpDC,EAAOP,EAASnC,cAAc,oBAAoByC,YAClDE,EAAOR,EAASnC,cAAc,oBAAoByC,YAClDG,EAAOT,EAASnC,cAAc,oBAAoB6C,KAClDC,EAvBG,IAAI/B,KAAKA,KAAKgC,OAAO/B,iBAAiBC,MAAM,KAAK,GAyBxD,MAAM+B,EAAU,C,IACZX,E,IACAE,E,MACAC,E,KACAE,E,KACAC,E,KACAC,EAEAK,aAAa,EACbC,QAAQ,E,WACRJ,GAGJ,IACI,MAAMK,EAAsBC,KAAKC,MAAMC,aAAaC,QA7ClC,4BAgDlB,GAA2B,OAAxBJ,EAGC,YADAG,aAAaE,QAlDC,0BAkD0BJ,KAAKK,UAAU,CAACT,KAI5D,GAA4B,OAAxBG,EAA8B,CAE9B,IAAK,MAAMO,KAAQP,EAEf,GAAGO,EAAKd,OAASI,EAAQJ,KAErB,YADAc,EAAKZ,WAAaA,GAK1BK,EAAoBQ,KAAKX,GACzBM,aAAaE,QAjEC,0BAiE0BJ,KAAKK,UAAUN,G,EAG7D,MAAMrB,GAEJJ,QAAQC,IAAI,iC,KAIpB,MAAMiC,EAAc7D,SAASC,cAAc,cACrC6D,EAAe9D,SAASC,cAAc,kBAE5C4D,EAAY3D,iBAAiB,SAE7B,WAEI,IAEI,MAAM6D,EAAyBV,KAAKC,MAAMC,aAAaC,QAnFrC,6BAwG1B,SAA4BQ,GAGxB,MAIMC,EAJWD,EAAcE,SAAQC,GAAYA,EAASpB,aAC5DqB,QAAO,CAACxB,EAAMyB,EAAKC,IAAQA,EAAIC,QAAQ3B,KAAUyB,IAGhB/D,KAAIkE,GAC7B,mCAAmCA,gDAClCrD,KAAK,IAKd,SAASsD,EAAazC,GAElB,GAAyB,OAAtBA,EAAEE,OAAOC,SACR,OAGJ,MAAMuC,EAAe1C,EAAEE,OAEjByC,EAAyBX,EAAc1D,KAAIqD,IAC7C,GAAGe,EAAahC,cAAgBiB,EAAKZ,WAEzC,MAAO,oEAC4BY,EAAKrB,aAAaqB,EAAKnB,8TAMzBmB,EAAKlB,oDACPkB,EAAKhB,iHAGLgB,EAAKf,gCACvBe,EAAKd,4EAEZ,IAIN6B,EAAaE,kBAAkBvD,mBAAmB,YAAasD,E,CAhCnEb,EAAazC,mBAAmB,YAAa4C,GAC7CH,EAAa5D,iBAAiB,QAASuE,E,CApBnCI,CAVsBd,EAAuBe,QAAO,CAAC1E,EAASuD,KAEtDA,EAAKR,QACL/C,EAAQwD,KAAKD,GAGVvD,IACR,IAMS,CAAd,MAAO2B,GAAO,C","sources":["src/js/read.js"],"sourcesContent":["\n// =======================  FOR TEST ==============================\nconst URL = `https://api.nytimes.com/svc/search/v2/articlesearch.json?api-key=MCCbLUuNkLgrOf1uBr1c9zmSoKm3Mp9g`;\nconst btnFetch = document.querySelector('.test-fetch');\n\nbtnFetch.addEventListener('click', onOpenNews);\n\nasync function onFetch() {\ntry {\n    const response = await fetch(URL);\n    const newsAll = await response.json();\n    return newsAll;\n\n    } catch(err) {\n\n    console.log(err);\n    };\n};\n\nasync function onOpenNews() {\n    try {\n        \n    const newsAll = await onFetch();\n    makeNews(newsAll.response.docs);\n\n    } catch(error) {\n        console.log(error);\n    };\n};\n\nfunction makeNews(arrNews) {\n     \n    try {\n        const markapNews = arrNews.map(({ headline, web_url, pub_date, snippet, multimedia, keywords }) =>\n        `<li class=\"news-item\">\n        <img class=\"news-item__img\" src=\"https://www.nytimes.com/${multimedia[2].url}\" alt=\"${keywords[0].value}\">\n        <div class=\"news-item__buttons\">\n         <button type=\"button\" class=\"news-item__btn\">Add to favorite</button>\n         <button type=\"button\" class=\"news-item__category\">Job searching </button>\n        </div>\n        <div class=\"news-item__wrapper-text\">\n          <h2 class=\"news-item__title\">${headline.main}</h2>\n          <p class=\"news-item__text\">${snippet}</p>\n        </div>\n        <div class=\"news-item__wrapper-date\">\n          <p class=\"news-item__date\">${new Date(pub_date).toLocaleString().split(',')[0]}</p>\n          <a href=\"${web_url}\" class=\"news-item__link\">Read more</a>\n        </div>\n        </li>`).join('');\n        listNews.insertAdjacentHTML('beforeend',markapNews);\n    } catch(err) {\n        const markapNews = arrNews.map(({ headline, web_url, pub_date, snippet, multimedia, keywords }) =>\n        `<li class=\"news-item\">\n        <img class=\"news-item__img\" src=\"https://cdn.pixabay.com/photo/2015/02/15/09/33/news-636978_960_720.jpg\" alt=\"${keywords[0].value}\">\n        <div class=\"news-item__buttons\">\n         <button type=\"button\" class=\"news-item__btn\">Add to favorite</button>\n         <button type=\"button\" class=\"news-item__category\">Job searching </button>\n        </div>\n        <div class=\"news-item__wrapper-text\">\n          <h2 class=\"news-item__title\">${headline.main}</h2>\n          <p class=\"news-item__text\">${snippet}</p>\n        </div>\n        <div class=\"news-item__wrapper-date\">\n          <p class=\"news-item__date\">${new Date(pub_date).toLocaleString().split(',')[0]}</p>\n          <a href=\"${web_url}\" class=\"news-item__link\">Read more</a>\n        </div>\n        </li>`).join('');\n        listNews.insertAdjacentHTML('beforeend',markapNews);\n    }\n};\n\n// =======================  FOR TEST ==============================\n\nconst KEY_LOCAL_STORAGE = 'read-news-local-storage';\nconst listNews = document.querySelector('.list-news');\n\n\n\nfunction createNewData() {\n    return new Date(Date.now()).toLocaleString().split(',')[0];\n};\n\n\nlistNews.addEventListener('click', onBtnReadMore);\n\nfunction onBtnReadMore(e) {\n    // =======================  FOR TEST ==============================\n    e.preventDefault();\n    // =======================  FOR TEST ==============================\n\n    if(e.target.nodeName !== 'A') {\n        return;\n    };\n\n    // makeObjectNews(e);\n    let newsCard = e.target.parentNode.parentNode;\n    let img = newsCard.querySelector('.news-item__img').src;\n    let alt = newsCard.querySelector('.news-item__img').alt;\n    let title = newsCard.querySelector('.news-item__title').textContent;\n    let text = newsCard.querySelector('.news-item__text').textContent;\n    let date = newsCard.querySelector('.news-item__date').textContent;\n    let link = newsCard.querySelector('.news-item__link').href;\n    let dateOfRead = createNewData();\n\n    const newsObj = {\n        img,\n        alt,\n        title,\n        text,\n        date,\n        link,\n    \n        isFavourite: false,\n        isRead: true,\n        dateOfRead,\n      };\n\n    try {\n        const newsAllLocalStorage = JSON.parse(localStorage.getItem(KEY_LOCAL_STORAGE));\n\n\n        if(newsAllLocalStorage === null) {\n\n            localStorage.setItem(KEY_LOCAL_STORAGE, JSON.stringify([newsObj]));\n            return;\n        };\n        \n        if (newsAllLocalStorage !== null) {\n\n            for (const news of newsAllLocalStorage) {\n                \n                if(news.link === newsObj.link) {\n                    news.dateOfRead = dateOfRead;\n                    return;\n                }\n            };\n\n            newsAllLocalStorage.push(newsObj);\n            localStorage.setItem(KEY_LOCAL_STORAGE, JSON.stringify(newsAllLocalStorage));\n        };\n\n    } catch(error) {\n\n        console.log('Error parse date local storage');\n    }\n};\n\nconst btnReadPage = document.querySelector('.read-page');\nconst listReadNews = document.querySelector('.readPage-list');\n\nbtnReadPage.addEventListener('click', makeArrNewsForPageRead);\n\nfunction makeArrNewsForPageRead() {\n\n    try {\n\n        const newsAllGetLocalStorage = JSON.parse(localStorage.getItem(KEY_LOCAL_STORAGE));\n        // console.log(newsAllGetLocalStorage);\n        \n        const arrNewsIsRead = newsAllGetLocalStorage.reduce((arrNews, news) => {\n\n            if (news.isRead) {\n                arrNews.push(news);\n            };\n\n            return arrNews;\n        }, []);\n\n\n        makeMarkapPageRead(arrNewsIsRead);\n\n\n    } catch (error) {\n        \n    }\n};\n\nfunction makeMarkapPageRead(arrayNewsRead) {\n\n\n    const allDates = arrayNewsRead.flatMap(newsRead => newsRead.dateOfRead).\n    filter((date, idx, arr) => arr.indexOf(date) === idx);\n\n\n    const markapDatesRead = allDates.map(data => \n            `<li class=\"readPage-list__item\">${data}<ul class=\"readPage-list__list\"></ul></li>`)\n            .join('');\n\n    listReadNews.insertAdjacentHTML('beforeend', markapDatesRead);\n    listReadNews.addEventListener('click', openListNews);\n\n    function openListNews(e) {\n\n        if(e.target.nodeName !== 'LI') {\n            return;\n        };\n\n        const cardDateRead = e.target;\n\n        const markapNewsAndDatesRead = arrayNewsRead.map(news => {\n            if(cardDateRead.textContent === news.dateOfRead) {\n\n        return `<li class=\"news-item\">\n        <img class=\"news-item__img\" src=\"${news.img}\" alt=\"${news.alt}\">\n        <div class=\"news-item__buttons\">\n         <button type=\"button\" class=\"news-item__btn\">Add to favorite</button>\n         <button type=\"button\" class=\"news-item__category\">Job searching </button>\n        </div>\n        <div class=\"news-item__wrapper-text\">\n          <h2 class=\"news-item__title\">${news.title}</h2>\n          <p class=\"news-item__text\">${news.text}</p>\n        </div>\n        <div class=\"news-item__wrapper-date\">\n          <p class=\"news-item__date\">${news.date}</p>\n          <a href=\"${news.link}\" class=\"news-item__link\">Read more</a>\n        </div>\n        </li>`;\n            };\n        });\n\n        cardDateRead.firstElementChild.insertAdjacentHTML('beforeend', markapNewsAndDatesRead); \n\n};\n\n};\n\n// function openListsReadNews(e) {\n//  cardDateRead.firstElementChild.classList.toggle('visually-hidden');\n// };"],"names":["$103c6abfc3a0e310$var$URL","document","querySelector","addEventListener","async","arrNews","markapNews","map","headline","web_url","pub_date","snippet","multimedia","keywords","url","value","main","Date","toLocaleString","split","join","$103c6abfc3a0e310$var$listNews","insertAdjacentHTML","err","$103c6abfc3a0e310$var$makeNews","response","fetch","json","console","log","$103c6abfc3a0e310$var$onFetch","docs","error","e","preventDefault","target","nodeName","newsCard","parentNode","img","src","alt","title","textContent","text","date","link","href","dateOfRead","now","newsObj","isFavourite","isRead","newsAllLocalStorage","JSON","parse","localStorage","getItem","setItem","stringify","news","push","$103c6abfc3a0e310$var$btnReadPage","$103c6abfc3a0e310$var$listReadNews","newsAllGetLocalStorage","arrayNewsRead","markapDatesRead","flatMap","newsRead","filter","idx","arr","indexOf","data","openListNews","cardDateRead","markapNewsAndDatesRead","firstElementChild","$103c6abfc3a0e310$var$makeMarkapPageRead","reduce"],"version":3,"file":"read.e17bc52f.js.map"}